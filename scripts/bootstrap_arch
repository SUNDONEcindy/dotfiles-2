#!/bin/bash

# Bootstrap an Arch Linux installation with Hyprland
# This script is meant to run on a clean fresh system

workdir=$(pwd)
scriptdir="$(dirname "${BASH_SOURCE[0]}")"
cd $scriptdir/..

#### Check for yay ####
ISYAY=/sbin/yay
if [ -f "$ISYAY" ]; then 
    echo -e "yay was located, moving on.\n"
    yay -Suy
else 
    echo -e "yay was not located, please install yay. Exiting script.\n"
    exit 
fi

### Disable wifi powersave mode ###
read -n1 -rep 'Would you like to disable wifi powersave? (y,n)' WIFI
if [[ $WIFI == "Y" || $WIFI == "y" ]]; then
    LOC="/etc/NetworkManager/conf.d/wifi-powersave.conf"
    echo -e "The following has been added to $LOC.\n"
    echo -e "[connection]\nwifi.powersave = 2" | sudo tee -a $LOC
    echo -e "\n"
    echo -e "Restarting NetworkManager service...\n"
    sudo systemctl restart NetworkManager
    sleep 3
fi

### Install WM and desktop programs ####
read -n1 -rep 'Would you like to install Hyprland and related packages? (y,n)' HYPR
if [[ $HYPR == "Y" || $HYPR == "y" ]]; then
    yay -S --noconfirm \
    hyprland \ # This is the Hyprland compositor
    kitty \ # Terminal emulator
    waybar \ # System menu bar
    swaybg \ # This is used to set a desktop background image
    swaylock-effects \ # This allows for the locking of the desktop its a fork that adds some editional visual effects
    wofi \ # This is an application launcher menu
    wlogout \ # This is a logout menu that allows for shutdown, reboot and sleep
    mako \ # This is a graphical notification daemon
    thunar \ # This is a graphical file manager
    ttf-jetbrains-mono-nerd \ # Som nerd fonts for icons and overall look
    polkit-gnome \ # needed to get superuser access on some graphical appliaction
    swappy \ # This is a screenshot editor tool
    grim \ # This is a screenshot tool it grabs images from a Wayland compositor
    slurp \ # This helps with screenshots, it selects a region in a Wayland compositor
    pamixer \ # This helps with audio settings such as volume
    brightnessctl \ # used to control monitor bright level
    gvfs \ # adds missing functionality to thunar such as automount usb drives
    bluez \ # the bluetooth service
    bluez-utils \ # command line utilities to interact with bluettoth devices
    lxappearance \ # used to set GTK theme
    xfce4-settings \ # set of tools for xfce, needed to set GTK theme
    xdg-desktop-portal-hyprland \ # xdg-desktop-portal backend for hyprland
    zathura \ # minimal document viewer with vim bindings
    zathura-pdf-mupdf # PDF/ePub plugin

    # Start the bluetooth service
    echo -e "Starting the Bluetooth Service...\n"
    sudo systemctl enable --now bluetooth.service
    sleep 2
    
    # Clean out other portals
    echo -e "Cleaning out conflicting xdg portals...\n"
    yay -R --noconfirm xdg-desktop-portal-gnome xdg-desktop-portal-gtk
fi

### Symlink configuration files ###
read -n1 -rep 'Would you like to use the config files? (y,n)' CFG
if [[ $CFG == "Y" || $CFG == "y" ]]; then
    echo -e "Symlinking config files...\n"
    ln -s $(pwd)/config/hypr ~/.config/
    ln -s $(pwd)/config/nvim ~/.config/
    ln -s $(pwd)/config/kitty ~/.config/
    ln -s $(pwd)/config/mako ~/.config/
    ln -s $(pwd)/config/waybar ~/.config/
    ln -s $(pwd)/config/swaylock ~/.config/
    ln -s $(pwd)/config/wofi ~/.config/
    
    # Set some files as exacutable 
    chmod +x ~/.config/hypr/xdg-portal-hyprland

    # Install dependencies required by neovim plugins
    yay -S --no-confirm nodejs npm python
fi

### Install liquidprompt ###
read -n1 -rep 'Would you like to install liquidprompt? (y,n)' LIQUID
if [[ $LIQUID == "Y" || $LIQUID == "y" ]]; then
    # install liquidprompt
    git clone --branch stable https://github.com/liquidprompt/liquidprompt.git ~/.liquidprompt
    echo -e "Updating .bashrc...\n"
    echo -e '\n[[ $- = *i* ]] && source ~/.liquidprompt/liquidprompt' >> ~/.bashrc
    echo -e "copying liquidprompt config file to ~/.config ...\n"
    ln -s $(pwd)/config/liquidpromptrc ~/.config/liquidpromptrc
    yay -S --no-confirm acpi # for battery/power indicator in prompt
fi

### Script is done ###
cd $workdir
echo -e "Script had completed.\n"
echo -e "Start Hyprland with the command 'Hyprland'.\n"
